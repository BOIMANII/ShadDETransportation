# .github/workflows/deploy.yml
# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Grant the GITHUB_TOKEN the rights to read the repo, publish Pages,
# and request an OIDC token (required by configure-pages@v5)
permissions:
  contents: read
  pages: write
  id-token: write

# Only one Pages deployment at a time; do not cancel in-progress runs
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    # Expose the published URL in the environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout your code
      - name: Checkout
        uses: actions/checkout@v4

      # 2) Build your docs/ folder with key injection
      - name: Prepare docs folder
        run: |
          rm -rf docs
          mkdir docs
          cp index.html planner.html docs/
          cp -r css images docs/ || true

          # Inject the secret Maps key into service.html
          sed "s|__MAP_KEY__|${{ secrets.GOOGLE_MAPS_API_KEY }}|g" \
            service.template.html > docs/service.html

      # 3) Tell GitHub weâ€™re deploying via Actions
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 4) Upload docs/ as the artifact for Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      # 5) Deploy to GitHub Pages and capture the URL
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
